# Generated by Django 3.2.12 on 2022-05-11 10:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import doctordetails.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_no', models.AutoField(primary_key=True, serialize=False)),
                ('company_id', models.CharField(default=doctordetails.models.Company.random_company_id, max_length=7, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=500, null=True)),
                ('present_address1', models.CharField(blank=True, max_length=100, null=True)),
                ('present_address2', models.CharField(blank=True, max_length=100, null=True)),
                ('present_address_post', models.CharField(blank=True, max_length=10, null=True)),
                ('phone_number', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+8801711111000'.", regex='^\\+?1?\\d{11,14}$')])),
                ('company_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('company_website', models.URLField(blank=True, null=True)),
                ('facebook_id', models.URLField(blank=True, null=True)),
                ('wa_number', models.CharField(blank=True, max_length=100, null=True)),
                ('youtube_url', models.URLField(blank=True, null=True)),
                ('activate_status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Depertment',
            fields=[
                ('depertment_no', models.AutoField(primary_key=True, serialize=False)),
                ('depertment_id', models.CharField(default=doctordetails.models.Depertment.random_depertment_id, max_length=4, unique=True)),
                ('depertment_name', models.CharField(blank=True, max_length=500, null=True)),
                ('activate_status', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='doctordetails.depertment')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Jobtitle',
            fields=[
                ('jobtitle_no', models.AutoField(primary_key=True, serialize=False)),
                ('jobtitle_id', models.CharField(default=doctordetails.models.Jobtitle.random_jobtitle_id, max_length=5, unique=True)),
                ('jobtitle_name', models.CharField(blank=True, max_length=500, null=True)),
                ('activate_status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Representative',
            fields=[
                ('sr_no', models.AutoField(primary_key=True, serialize=False)),
                ('sr_id', models.CharField(default=doctordetails.models.Representative.random_representative_id, max_length=7, unique=True)),
                ('sr_name', models.CharField(blank=True, max_length=500, null=True)),
                ('sr_number', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+8801711111000'.", regex='^\\+?1?\\d{11,14}$')])),
                ('sr_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('wa_number', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook_id', models.URLField(blank=True)),
                ('activate_status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('specialization_no', models.AutoField(primary_key=True, serialize=False)),
                ('specialization_id', models.CharField(default=doctordetails.models.Specialization.random_specialization_id, max_length=6, unique=True)),
                ('specialization_name', models.CharField(blank=True, max_length=500, null=True)),
                ('activate_status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctorprofile',
            fields=[
                ('doctot_no', models.AutoField(primary_key=True, serialize=False)),
                ('doctot_id', models.CharField(default=doctordetails.models.Doctorprofile.random_id, max_length=5, unique=True)),
                ('salutation_name', models.CharField(blank=True, max_length=10, null=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_name', models.CharField(max_length=100)),
                ('husband_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=100)),
                ('marriage_status', models.BooleanField()),
                ('date_of_birth', models.DateField()),
                ('join_date', models.DateField()),
                ('active_status', models.BooleanField()),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('religion', models.CharField(choices=[('Muslim', 'Muslim'), ('Christian', 'Christian'), ('Hindu', 'Hindu'), ('Buddhism', 'Buddhism'), ('Other', 'Other')], max_length=100)),
                ('phone_home', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+8801711111000'.", regex='^\\+?1?\\d{11,14}$')])),
                ('phone_office', models.CharField(max_length=100)),
                ('nationality', models.CharField(choices=[('Bangladeshi', 'Bangladeshi'), ('Indian', 'Indian'), ('Other', 'Other')], max_length=30)),
                ('present_address1', models.CharField(blank=True, max_length=100, null=True)),
                ('present_address2', models.CharField(blank=True, max_length=100, null=True)),
                ('present_address3', models.CharField(blank=True, max_length=100, null=True)),
                ('present_address_post', models.CharField(blank=True, max_length=10, null=True)),
                ('present_careof_address', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_address1', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_address2', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_address3', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_address_post', models.CharField(blank=True, max_length=10, null=True)),
                ('permanent_careof_address', models.CharField(blank=True, max_length=100, null=True)),
                ('referal_flag', models.BooleanField(default=False)),
                ('int_ext_flag', models.BooleanField(default=False)),
                ('avg_duration_min', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('avg_load_per_day', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('block_load', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)])),
                ('room_no', models.PositiveSmallIntegerField()),
                ('offday_remarks', models.TextField(blank=True, max_length=500, null=True)),
                ('doctor_signature', models.CharField(blank=True, max_length=250, null=True)),
                ('chamber_address1', models.CharField(blank=True, max_length=500, null=True)),
                ('chamber_address2', models.CharField(blank=True, max_length=500, null=True)),
                ('degree1', models.CharField(max_length=100)),
                ('remarks', models.TextField(blank=True, max_length=500, null=True)),
                ('email_personal', models.EmailField(blank=True, max_length=254, null=True)),
                ('email_official', models.EmailField(blank=True, max_length=254, null=True)),
                ('tin_no', models.BigIntegerField(blank=True, null=True)),
                ('card_no', models.BigIntegerField()),
                ('ss_created_no', models.DateTimeField(auto_now_add=True)),
                ('ss_created_session', models.CharField(blank=True, max_length=100, null=True)),
                ('ss_modified_on', models.DateTimeField(auto_now=True)),
                ('ss_modified_session', models.CharField(max_length=100)),
                ('doctor_name', models.CharField(max_length=100)),
                ('disc_allowed', models.PositiveSmallIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('due_allowed', models.PositiveSmallIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2000)])),
                ('doc_com_flag', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9999)])),
                ('doc_com_pct', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9999)])),
                ('doctor_photo', models.ImageField(blank=True, null=True, upload_to='doctor_images', verbose_name='Doctor Photo')),
                ('company_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='doctordetails.company')),
                ('depertment_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='depertment', to='doctordetails.depertment')),
                ('jobtitle_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobtitle', to='doctordetails.jobtitle')),
                ('permanent_address_coun', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='doctordetails.country')),
                ('permanent_address_dist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='doctordetails.district')),
                ('present_address_coun', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country', to='doctordetails.country')),
                ('present_address_dist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='district', to='doctordetails.district')),
                ('salesrep_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='doctordetails.representative')),
                ('specialization_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='doctordetails.specialization')),
                ('ss_creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator_name', to=settings.AUTH_USER_MODEL)),
                ('ss_modifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modifier_name', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='present_address_coun',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_country', to='doctordetails.country'),
        ),
        migrations.AddField(
            model_name='company',
            name='present_address_dist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_district', to='doctordetails.district'),
        ),
    ]
